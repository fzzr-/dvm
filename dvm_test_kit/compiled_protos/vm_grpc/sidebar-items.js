initSidebarItems({"enum":[["ContractStatus","Status of contract execution."],["ContractType","Type of contract (module or script)."],["VmTypeTag","Type of value returned by event during contract execution."],["VmWriteOp","Write set operation type."]],"mod":[["vm_compiler_client","Generated client implementations."],["vm_compiler_server","Generated server implementations."],["vm_multiple_sources_compiler_client","Generated client implementations."],["vm_multiple_sources_compiler_server","Generated server implementations."],["vm_script_metadata_client","Generated client implementations."],["vm_script_metadata_server","Generated server implementations."],["vm_service_client","Generated client implementations."],["vm_service_server","Generated server implementations."]],"struct":[["CompilationResult",""],["CompilationUnit","Compilation unit."],["CompiledUnit","Compiled source."],["MultipleCompilationResult",""],["Signature",""],["SourceFile","Compiler API"],["SourceFiles","Compiler API"],["VmAccessPath","Storage path"],["VmArgs","Contract arguments."],["VmContract","VM contract object to process."],["VmEvent","VM event returns after contract execution."],["VmExecuteRequest","Execute request for VM"],["VmExecuteResponse","Response from VM contains write_set, events, gas used and status for specific contract."],["VmExecuteResponses","Response from VM in case of execution multiplay contracts."],["VmScript","Script Arguments API"],["VmStatus","Status of code contract execution."],["VmStructTag","Structure tag (for vm events contains structures)."],["VmType","Describing VMType for events."],["VmValue","VM value should be passed before execution and return after execution (with opcodes), write_set in nutshell."]]});